plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'br.mhm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
		
	implementation 'org.liquibase:liquibase-core:3.10.3'
	implementation 'org.liquibase.ext:liquibase-hibernate5:3.8'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	
	compileOnly 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	annotationProcessor 'org.projectlombok:lombok'
	
	runtimeOnly 'org.postgresql:postgresql'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

// Task to HELP generating liquibase changelogs.
Properties props = new Properties()

file('src/main/resources/application.properties').withInputStream {
   props.load(it)
}

task diffChangelog(type: JavaExec) {
    group = "db"

    classpath sourceSets.main.runtimeClasspath
  
    main = "liquibase.integration.commandline.Main"

    args "--changeLogFile=src/main/resources/db/" + buildTimestamp() + "_changelog.xml"
    args "--referenceUrl=hibernate:spring:br.mhm.passwordmanagerapi.model?dialect=org.hibernate.dialect.PostgreSQL9Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
    args "--username=" + props.getProperty('spring.datasource.username')
    args "--password=" + props.getProperty('spring.datasource.password')
    args "--url=" + props.getProperty('spring.datasource.url')
    args "--driver=org.postgresql.Driver"
    args "diffChangeLog"
}

def buildTimestamp()
{
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}